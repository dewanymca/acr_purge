{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workflows_ACR_Image_Purge_Prod_name": {
            "defaultValue": "ACR_Image_Purge_Prod",
            "type": "String"
        },
        "connections_azuremonitorlogs_externalid": {
            "defaultValue": "/subscriptions/6d101836-cb91-40f9-bd75-9bede970b149/resourceGroups/CareServiceAlerts/providers/Microsoft.Web/connections/azuremonitorlogs",
            "type": "String"
        },
        "variable_versionToKeep": {
            "defaultValue": 5,
            "type": "Int"
        },
	"acr_clientid":{
	    "defaultValue" :"14ca82ab-00b2-4369-aa82-c4872aa26a47",
	    "type": "String"
	},
	"acr_clientsecret":{
	    "defaultValue" :"14ca82ab-00b2-4369-aa82-c4872aa26a47",
	     "type": "String"
		}
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_ACR_Image_Purge_Prod_name')]",
            "location": "eastus",
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 1
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "GetAADToken": {
                            "runAfter": {
                                "Run_query_and_list_results": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": "@concat('grant_type=client_credentials&resource=https://management.core.windows.net/&client_id=',@{parameters('acr_clientid')},'&client_secret=',@{parameters('acr_clientsecret')})",
                                "headers": {
                                    "content-type": "application/x-www-form-urlencoded"
                                },
                                "method": "POST",
                                "uri": "https://login.microsoftonline.com/microsoft.onmicrosoft.com/oauth2/token?api-version=1.0"
                            }
                        },
                        "GetACRToken": {
                            "runAfter": {
                                "GetAADToken": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": "grant_type=access_token&service=acrsceastusxe5d.azurecr.io&tenant=72f988bf-86f1-41af-91ab-2d7cd011db47&access_token=@{body('GetAADToken')?['access_token']}",
                                "headers": {
                                    "content-type": "application/x-www-form-urlencoded"
                                },
                                "method": "POST",
                                "uri": "https://acrsceastusxe5d.azurecr.io/oauth2/exchange"
                            }
                        },
                        "Init_isFound": {
                            "runAfter": {
                                "GetACRToken": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "isFound",
                                        "type": "integer",
                                        "value": -1
                                    }
                                ]
                            }
                        },
                        "Init_versionToKeep": {
                            "runAfter": {
                                "Init_isFound": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "versionToKeep",
                                        "type": "integer",
                                        "value": "[parameters('variable_versionToKeep')]"
                                    }
                                ]
                            }
                        },
                        "Iterate_Over_Image": {
                            "foreach": "@body('Run_query_and_list_results')?['value']",
                            "actions": {
                                "Get_Read_Delete_Token_Repository": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "body": "grant_type=refresh_token&service=acrsceastusxe5d.azurecr.io&scope=repository:@{items('Iterate_Over_Image')?['Image']}:delete,metadata_read&refresh_token=@{body('GetACRToken')['refresh_token']}",
                                        "headers": {
                                            "content-type": "application/x-www-form-urlencoded"
                                        },
                                        "method": "POST",
                                        "uri": "https://acrsceastusxe5d.azurecr.io/oauth2/token"
                                    }
                                },
                                "IterateOverTags": {
                                    "foreach": "@body('Read_Repository_Tags')?['tags']",
                                    "actions": {
                                        "CheckForMinTagCondition": {
                                            "actions": {
                                                "setVersionFoundTo1": {
                                                    "runAfter": {},
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "isFound",
                                                        "value": 1
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "else": {
                                                "actions": {
                                                    "Condition": {
                                                        "actions": {
                                                            "Delete_Tag": {
                                                                "runAfter": {},
                                                                "type": "Http",
                                                                "inputs": {
                                                                    "headers": {
                                                                        "Authorization": "Bearer @{body('Get_Read_Delete_Token_Repository')['access_token']}"
                                                                    },
                                                                    "method": "DELETE",
                                                                    "uri": "https://acrsceastusxe5d.azurecr.io/v2/@{items('Iterate_Over_Image')?['Image']}/manifests/@{items('IterateOverTags')?['digest']}"
                                                                }
                                                            }
                                                        },
                                                        "runAfter": {},
                                                        "else": {
                                                            "actions": {
                                                                "CheckVersionFound_ThenDecrement": {
                                                                    "actions": {
                                                                        "Decrement_versionToKeepBy1": {
                                                                            "runAfter": {},
                                                                            "type": "DecrementVariable",
                                                                            "inputs": {
                                                                                "name": "versionToKeep",
                                                                                "value": 1
                                                                            }
                                                                        }
                                                                    },
                                                                    "runAfter": {},
                                                                    "expression": {
                                                                        "and": [
                                                                            {
                                                                                "equals": [
                                                                                    "@variables('isFound')",
                                                                                    1
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": "If"
                                                                }
                                                            }
                                                        },
                                                        "expression": {
                                                            "and": [
                                                                {
                                                                    "equals": [
                                                                        "@variables('isFound')",
                                                                        1
                                                                    ]
                                                                },
                                                                {
                                                                    "equals": [
                                                                        "@variables('versionToKeep')",
                                                                        0
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "type": "If"
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@items('IterateOverTags')?['name']",
                                                            "@items('Iterate_Over_Image')?['min_ImageTag']"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {
                                        "Set_isFound_To_Zero": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                },
                                "Read_Repository_Tags": {
                                    "runAfter": {
                                        "Get_Read_Delete_Token_Repository": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "headers": {
                                            "Authorization": "Bearer @{body('Get_Read_Delete_Token_Repository')['access_token']}"
                                        },
                                        "method": "GET",
                                        "uri": "https://acrsceastusxe5d.azurecr.io/acr/v1/@{items('Iterate_Over_Image')?['Image']}/_tags?n=100&orderby=timedesc"
                                    }
                                },
                                "Set_isFound_To_Zero": {
                                    "runAfter": {
                                        "Read_Repository_Tags": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "isFound",
                                        "value": 0
                                    }
                                }
                            },
                            "runAfter": {
                                "Init_versionToKeep": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Run_query_and_list_results": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "union KubePodInventory, \nworkspace('LA-AKS-CLUSTER-SC-PROD-UKSOUTH-OXN6-WORKSPACE'). KubePodInventory, \nworkspace('LA-AKS-CLUSTER-SC-PROD-AUSTRALIAEAST-TZM0-WORKSPACE').KubePodInventory,\nworkspace('AKS-CLUSTER-SC-UAT-EASTUS-QRL6-WORKSPACE').KubePodInventory,\nworkspace('AKS-CLUSTER-SC-UAT-WESTUS2-5CHE-WORKSPACE').KubePodInventory\n| where Namespace  in ('devicecare','deliver','care')\n| where ContainerID !=''\n| distinct  ContainerID, Namespace, ClusterName,_ResourceId, Name\n| join kind= inner (\nunion ContainerInventory, \nworkspace('LA-AKS-CLUSTER-SC-PROD-UKSOUTH-OXN6-WORKSPACE'). ContainerInventory, \nworkspace('LA-AKS-CLUSTER-SC-PROD-AUSTRALIAEAST-TZM0-WORKSPACE').ContainerInventory,\nworkspace('AKS-CLUSTER-SC-UAT-EASTUS-QRL6-WORKSPACE').ContainerInventory,\nworkspace('AKS-CLUSTER-SC-UAT-WESTUS2-5CHE-WORKSPACE').ContainerInventory\n| extend env= case(_ResourceId contains \"uat\" , \"UAT\", \"Prod\")\n| where Repository contains 'acrsceastusxe5d'\n| where ContainerState !='Deleted'\n| distinct  Image, ImageID,Repository, ContainerID, ImageTag, TimeGenerated,_ResourceId, env, ContainerState)\non  ContainerID,_ResourceId\n| distinct  Image, ImageTag, ClusterName,env, Namespace,ContainerState\n| order by Image, ImageTag desc\n| summarize min(ImageTag) by Image,Namespace\n| where Image =='rods'",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/queryData",
                                "queries": {
                                    "resourcegroups": "RG-AKS-CLUSTER-SC-PROD-EASTUS",
                                    "resourcename": "AKS-CLUSTER-SC-PROD-EASTUS-PD4B-WORKSPACE",
                                    "resourcetype": "Log Analytics Workspace",
                                    "subscriptions": "264614c3-e12f-4a52-8380-902410e8ac2d",
                                    "timerange": "Last 24 hours"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuremonitorlogs": {
                                "connectionId": "[parameters('connections_azuremonitorlogs_externalid')]",
                                "connectionName": "azuremonitorlogs",
                                "id": "/subscriptions/6d101836-cb91-40f9-bd75-9bede970b149/providers/Microsoft.Web/locations/eastus/managedApis/azuremonitorlogs"
                            }
                        }
                    }
                }
            }
        }
    ]
}
